arr=[43,23,22,56,78,1,5,6]
  

def merge(arr):
    if len(arr) > 1:
        mid = len(arr) // 2
        left = arr[:mid]  # Slice from 0 to mid to get the left subarray
        right = arr[mid:]  # Slice from mid to the end to get the right subarray

        # Recursively sort the left and right subarrays
        merge(left)
        merge(right)

        # Merge the sorted subarrays back into arr
        lp = rp = fp = 0  # Initialize pointers for left, right, and final merged array
        while lp < len(left) and rp < len(right):
            if left[lp] < right[rp]:
                arr[fp] = left[lp]
                lp += 1
            else:
                arr[fp] = right[rp]
                rp += 1
            fp += 1

        # Copy any remaining elements from left and right subarrays
        while lp < len(left):
            arr[fp] = left[lp]
            lp += 1
            fp += 1
        while rp < len(right):
            arr[fp] = right[rp]
            rp += 1
            fp += 1
    return arr