def maxcoins(num):
    num = [1] + num + [1]
    dp = {}
    
    def dfs(l, r):
        if l > r:
            return 0
        if (l, r) in dp:
            return dp[(l, r)]
        dp[(l, r)] = 0
        for i in range(l, r + 1):
            coins = num[l-1] * num[i] * num[r+1]
            coins += dfs(l, i - 1) + dfs(i + 1, r)
            dp[(l, r)] = max(dp[(l, r)], coins)
        return dp[(l, r)]
    
    return dfs(1, len(num) - 2)

num = [3, 1, 5, 8, 2]
print(maxcoins(num))
